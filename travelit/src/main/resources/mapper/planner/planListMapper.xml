<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.back.travelit.mapper.planner.PlanMapper">

    <!-- 유저 즐겨찾기 지역 정보 조회 -->
    <select id="selectMarkLocInfo" parameterType="int" resultType="com.back.travelit.dto.response.planner.PlanLocInfo">
        select LOC.LOCATION_INFO_ID AS locInfoId, LOC.TITLE AS locTitle, LOC.SUB_TITLE AS locSubTitle, LOC.ADDRESS AS locAddress
        from LOCATION_BOOKMARK MARK
            left join LOCATION_INFO LOC
                on MARK.LOCATION_INFO_ID = LOC.LOCATION_INFO_ID
        where MARK.USER_ID = #{userId};
    </select>

    <!--전체 지역 정보 조회 -->
    <select id="selectAllLocInfo" parameterType="com.back.travelit.domain.common.PagingSearchCriteria" resultType="com.back.travelit.dto.response.planner.PlanLocInfo">
        select LOC.LOCATION_INFO_ID AS locInfoId, LOC.LOCATION_CODE AS locCode, CODE.LOCATION_NAME AS locName, LOC.TITLE AS locTitle, LOC.SUB_TITLE AS locSubTitle, LOC.ADDRESS AS locAddress
        from LOCATION_INFO LOC
        left join LOCATION_CODE CODE
        ON LOC.LOCATION_CODE = CODE.LOCATION_CODE
        <!--<if test="searchRequest.keyword != null and searchRequest.keyword != ''">
            where CODE.LOCATION_NAME LIKE '%서울%'
            or LOC.TITLE LIKE '%서울%'
            or LOC.DESCRIPTION LIKE '%서울%'
            or LOC.ADDRESS LIKE '%서울%'
        </if>-->
    </select>

    <!-- 플래너 상세 보기 -->
    <!-- 플래너 기본 정보 -->
    <select id="selectPlanDetail" parameterType="int" resultMap="detailPlan">
        select P.PL_TITLE, P.PL_STR_DATE,
               P.PL_END_DATE, P.PL_CREATE_AT,
               C.LOCATION_NAME
        from PLAN P
            left join PLAN_LOC PLOC
                on P.PLAN_ID = PLOC.PLAN_ID
            left join LOCATION_CODE C
                on PLOC.LOCATION_CODE = C.LOCATION_CODE
        where P.PLAN_ID = #{planId};
    </select>

    <!-- 플래너 스케줄 -->
    <select id="selectSchedDetail" parameterType="int" resultMap="detailSched">
        select S.PL_DAY, LOC.TITLE,
               LOC.SUB_TITLE, LOC.ADDRESS, IMG.IMG_SRC
        from SCHED S
            left join SCHED_INFO SI
                on S.SCHED_ID = SI.SCHED_ID
            left join LOCATION_INFO LOC
                on SI.LOCATION_INFO_ID = LOC.LOCATION_INFO_ID
            inner join ( select LOCATION_INFO_ID, IMG_SRC
                from LOCATION_INFO_IMG
                group by LOCATION_INFO_ID
            )IMG on LOC.LOCATION_INFO_ID = IMG.LOCATION_INFO_ID
        where S.PLAN_ID = #{planId};
    </select>

    <!-- resultMap -->
    <!-- 플래너 상세 보기 -->
    <!-- 플래너 기본 정보 -->
    <resultMap id="detailPlan" type="com.back.travelit.dto.response.planner.DetailPlan">
        <result column="PL_TITLE" property="plTitle"></result>
        <result column="PL_STR_DATE" property="startDate"></result>
        <result column="PL_END_DATE" property="endDate"></result>
        <result column="PL_CREATE_AT" property="createAt"></result>
        <collection property="plLocNames" ofType="com.back.travelit.dto.response.planner.DetailPlanLoc">
            <collection property="locNames" ofType="com.back.travelit.dto.response.planner.DetailLocationCode">
                <result column="LOCATION_NAME" property="locName"/>
            </collection>
        </collection>
    </resultMap>

    <!-- 플래너 스케줄 -->
    <resultMap id="detailSched" type="com.back.travelit.dto.response.planner.DetailSched">
        <result column="PL_DAY" property="plDay"/>
        <collection property="schedInfos" ofType="com.back.travelit.dto.response.planner.DetailSchedInfo">
            <collection property="locationInfos" ofType="com.back.travelit.dto.response.planner.DetailLocationInfo">
                <result column="TITLE" property="locTitle"/>
                <result column="SUB_TITLE" property="locSubTitle"/>
                <result column="ADDRESS" property="address"/>
                <collection property="imgSrcs" ofType="com.back.travelit.dto.response.planner.DetailLocImage">
                    <result column="IMG_SRC" property="imgSrc"/>
                </collection>
            </collection>
        </collection>
    </resultMap>

    <!-- 내 플래너 리스트 -->
    <select id="selectMyPlan" parameterType="int" resultType="com.back.travelit.dto.response.planner.PlannerList">
        SELECT
            P.PLAN_ID AS planId, P.PL_STR_DATE AS startDate,
            P.PL_END_DATE AS endDate, P.PL_TITLE AS plTitle,
            P.PL_CREATE_AT AS createAt,
            GROUP_CONCAT(DISTINCT CODE.LOCATION_NAME ORDER BY CODE.LOCATION_NAME SEPARATOR ' ') AS locations
        FROM PLAN P
            LEFT JOIN PLAN_LOC PLOC ON P.PLAN_ID = PLOC.PLAN_ID
            LEFT JOIN LOCATION_CODE CODE ON PLOC.LOCATION_CODE = CODE.LOCATION_CODE
            LEFT JOIN LOCATION_INFO LOC ON CODE.LOCATION_CODE = LOC.LOCATION_CODE
        WHERE P.USER_ID = #{userId}
        GROUP BY
            P.PLAN_ID, P.USER_ID, P.PL_STR_DATE, P.PL_END_DATE, P.PL_TITLE, P.PL_CREATE_AT
    </select>

    <!--지역정보 리스트(조회수순 6개)-->
    <select id="selectLocList" parameterType="int" resultType="com.back.travelit.dto.response.location.LocationPostResponse">
        select L.LOCATION_INFO_ID AS locationInfoId, L.TITLE, L.DESCRIPTION, L.ADDRESS, I.IMG_SRC AS profileUrl, L.VIEWS AS views, IFNULL(IL.LIKE_COUNT, 0) AS likeCount, L.CREATE_AT
        from LOCATION_INFO L
                 inner join (
            select I1.LOCATION_INFO_ID, I1.IMG_SRC
            from LOCATION_INFO_IMG I1
                     inner join (
                select LOCATION_INFO_ID, MIN(LOCATION_IMG_ID) as LOCATION_IMG_ID
                from LOCATION_INFO_IMG
                group by LOCATION_INFO_ID
            ) I2 ON I1.LOCATION_IMG_ID = I2.LOCATION_IMG_ID
        ) I on L.LOCATION_INFO_ID = I.LOCATION_INFO_ID
                 LEFT OUTER JOIN (
            SELECT LOCATION_INFO_ID, count(LOCATION_INFO_ID) as LIKE_COUNT
            FROM LOCATION_INFO_LIKES
            GROUP BY LOCATION_INFO_ID
        ) IL ON L.LOCATION_INFO_ID = IL.LOCATION_INFO_ID
        order by views desc
        limit #{count};
    </select>

    <!-- 상품 정보 리스트 (조회수순 8개)-->
    <select id="selectProductList" resultType="com.back.travelit.dto.response.product.ProductResponse">
        SELECT P.PRO_ID, P.PRO_NAME, P.PRO_PRICE, P.PRO_LOCATION, P.PRO_VIEW, P.TOUR_START, P.TOUR_END, PI.PRO_IMG_NAME
        FROM PRODUCT P
                 INNER JOIN (
            SELECT PI.PRO_ID, MIN(PI.PRO_IMG_ID) AS MIN_PRO_IMG_ID
            FROM PRODUCT_IMG PI
            GROUP BY PI.PRO_ID
        ) MIN_IMG ON P.PRO_ID = MIN_IMG.PRO_ID
                 INNER JOIN PRODUCT_IMG PI ON MIN_IMG.MIN_PRO_IMG_ID = PI.PRO_IMG_ID
        ORDER BY P.PRO_VIEW DESC
        LIMIT 8
    </select>

    <!-- 페이징 처리 -->
    <select id="count" parameterType="com.back.travelit.dto.request.location.SearchRequest" resultType="int">
        SELECT COUNT(*)
        FROM LOCATION_INFO LOC
        WHERE LOC.LOCATION_CODE = #{locationCode}
        <if test="keyword != null and keyword != ''">
            AND (LOC.TITLE LIKE CONCAT('%', #{keyword}, '%')
            OR LOC.DESCRIPTION LIKE CONCAT('%', #{keyword}, '%'))
        </if>
    </select>

<!-- import sql -->
    <!-- 정렬 -->
    <sql id="sort">
        <choose>
            <when test="searchRequest.sort == 'latest'">
                ORDER BY P.PL_CREATE_AT DESC
            </when>
            <when test="searchRequest.sort == 'views'">
                ORDER BY P.PL_VIEWS DESC
            </when>
            <otherwise>
                ORDER BY P.PL_CREATE_AT DESC
            </otherwise>
        </choose>
    </sql>

    <!-- 검색 키워드가 있을 때 -->
    <sql id="search">
        <if test="searchRequest.keyword != null and searchRequest.keyword != ''">
            HAVING
            SUM(CASE
            WHEN LOC.TITLE LIKE '%', #{searchRequest.keyword}, '%' THEN 1
            WHEN LOC.DESCRIPTION LIKE '%', #{searchRequest.keyword}, '%' THEN 1
            WHEN CODE.LOCATION_NAME LIKE '%', #{searchRequest.keyword}, '%' THEN 1
            ELSE 0
            END) > 0
        </if>
    </sql>


</mapper>