<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.back.travelit.mapper.product.ProductReviewMapper">

    <!-- 리뷰 목록 조회 -->
    <select id="findAll" parameterType="int" resultType="com.back.travelit.dto.response.product.ProductReviewResponse">
        SELECT PR.PRO_REVIEW_ID, PR.USER_ID, PR.PRO_ID, PR.PRO_REVIEW_CONTENT, PR.PRO_REVIEW_DATE, PR.PRO_SCORE, U.NICKNAME
        FROM PRODUCT_REVIEW PR
        INNER JOIN USER U
        ON PR.USER_ID = U.USER_ID
        WHERE PR.PRO_ID = #{value}
        ORDER BY PR.PRO_REVIEW_ID DESC
    </select>

    <!-- 리뷰 상세정보 조회 -->
    <select id="findById" parameterType="int" resultType="com.back.travelit.dto.response.product.ProductReviewResponse">
        SELECT PR.PRO_REVIEW_ID, PR.USER_ID, PR.PRO_ID, PR.PRO_REVIEW_CONTENT, PR.PRO_REVIEW_DATE, PR.PRO_SCORE, U.NICKNAME
        FROM PRODUCT_REVIEW PR
        INNER JOIN USER U
        ON PR.USER_ID = U.USER_ID
        WHERE PR.PRO_REVIEW_ID = #{value}
    </select>

    <!-- 리뷰 저장 -->
    <insert id="save" parameterType="com.back.travelit.dto.request.product.ProductReviewRequest" useGeneratedKeys="true" keyProperty="proReviewId">
        INSERT INTO PRODUCT_REVIEW(PRO_REVIEW_ID, USER_ID, PRO_ID, PRO_REVIEW_CONTENT, PRO_REVIEW_DATE, PRO_SCORE)
        VALUES(#{proReviewId}, #{userId}, #{proId}, #{proReviewContent}, DEFAULT, #{proScore})
    </insert>

    <!-- 리뷰 수정 -->
    <update id="update" parameterType="com.back.travelit.dto.request.product.ProductReviewRequest">
        UPDATE PRODUCT_REVIEW
        SET PRO_REVIEW_CONTENT = #{proReviewContent},
            PRO_REVIEW_DATE = DEFAULT,
            PRO_SCORE = #{proScore}
        WHERE PRO_REVIEW_ID = #{proReviewId}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteById" parameterType="int">
        DELETE
        FROM PRODUCT_REVIEW
        WHERE PRO_REVIEW_ID = #{PRO_REVIEW_ID}
    </delete>

    <!-- 상품 구매여부 확인 후 리뷰 작성 권한 -->
    <select id="countByUserAndProductAndReservation" parameterType="map" resultType="int">
        SELECT COUNT(PR.PRO_REVIEW_ID)
        FROM RESERVATION R
                 LEFT JOIN PRODUCT_REVIEW PR ON R.PRO_ID = PR.PRO_ID
                 LEFT JOIN USER U ON R.USER_ID = U.USER_ID
        WHERE R.USER_ID = #{USER_ID}
          AND R.PRO_ID = #{PRO_ID}
          AND PR.USER_ID = #{USER_ID}
    </select>

</mapper>